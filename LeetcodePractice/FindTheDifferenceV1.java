/*
 * List: https://leetcode.com/studyplan/programming-skills/
 * Problem #2: https://leetcode.com/problems/find-the-difference/description/?envType=study-plan-v2&envId=programming-skills
 * String t is generated by random shuffling string s and then add one more letter at a random position.

 * Return the letter that was added to t.
 */
package ProgrammingSkills;

/**
 *
 * @author vothimaihoa
 */

class Solution {
    private HashMap<Character,Integer> putToHashMap(char[] charArr, int len) {
        HashMap<Character,Integer> charMap = new HashMap<>();
        for (char i = 0; i < len; i++) {
            if(!charMap.containsKey(charArr[i])) {
                charMap.put(charArr[i],1);
            } else {
                charMap.put(charArr[i], charMap.get(charArr[i]) + 1);
            }
        }
        return charMap;
    }
    public char findTheDifference(String s, String t) {
        int i = 0;
        int lenS = s.length();
        int lenT = t.length();
        char[] sArr = s.toCharArray();
        char[] tArr = t.toCharArray();
        char result = tArr[0];
        Map<Character,Integer> charMapS = putToHashMap(sArr, lenS);
        Map<Character, Integer> charMapT = putToHashMap(tArr, lenT);
        for (char c = 'a'; c <= 'z'; c++) {

            if ((charMapT.containsKey(c) && charMapS.containsKey(c) && charMapT.get(c) > charMapS.get(c))
            ||(charMapT.containsKey(c) && !charMapS.containsKey(c))) {
                result = c;
                break;
            }

        }
        return result;
    }
}